import 'dart:async';
import 'dart:io';
import 'dart:js';
import 'dart:math';

import 'package:flutter/material.dart';
import 'package:tflite/tflite.dart';
// import 'package:tflite_flutter/tflite_flutter.dart';

String my_main_str = "Begin a Session";
var encoder;
var decoder;

load_tflite() async {
  // encoder = await Interpreter.fromAsset('assets/encoder.tflite');
  // decoder = await Interpreter.fromAsset('assets/decoder.tflite');
  encoder = await Tflite.loadModel(
    model: "assets/encoder.tflite",
  );
  decoder = await Tflite.loadModel(
    model: "assets/decoder.tflite",
  );
}

var ratios = [
  0.22,
  0.33,
  0.21,
  0.16,
  7.08,
  7.63,
  6.76,
  1.51,
  13.40,
  18.92,
  53.78,
  31.94,
  5.66,
  2.20,
  2.18,
  1.63,
  4.14,
  3.70,
  4.09,
  0.63,
  0.56,
  0.47,
  0.76,
  0.72,
  0.59,
  2.00,
  2.17,
  1.25,
  0.64,
  0.28,
];

var inputs = [
  [-0.10552577, -2.5709915, 0.04029166, -2.2870312, 0.18227178, -2.0049896],
  [-0.10552577, -2.5000014, 0.2513432, -2.21796, 0.11128172, -2.0049896],
  [-0.10552577, -2.2870312, 0.11128172, -2.1469698, 0.11128172, -1.9339995],
  [-0.10552577, -0.2398313, 0.04029166, -0.10168847, 0.04029166, 0.04029166],
  [0.16500393, 0.39332333, 0.18227178, 0.5353035, -0.03069841, 0.39332333],
  [0.03069841, 0.39332333, 0.11128172, 0.4643134, -0.03069841, 0.39332333],
  [-0.30698407, 0.2513432, -0.3818114, 0.39332333, -0.10168847, 0.18227178],
  [-0.17267853, 0.39332333, -0.2398313, 0.5353035, 0.11128172, 0.18227178],
  [0.09785116, 0.6043749, -0.10168847, 0.746355, 0.11128172, 0.2513432],
  [-0.10552577, -0.2398313, 0.04029166, -0.10168847, 0.04029166, 0.04029166],
  [0.16500393, 0.39332333, 0.18227178, 0.5353035, -0.03069841, 0.39332333],
  [0.03069841, 0.39332333, 0.11128172, 0.4643134, -0.03069841, 0.39332333],
  [-0.30698407, 0.2513432, -0.3818114, 0.39332333, -0.10168847, 0.18227178],
  [-0.17267853, 0.39332333, -0.2398313, 0.5353035, 0.11128172, 0.18227178],
  [0.09785116, 0.6043749, -0.10168847, 0.746355, 0.11128172, 0.2513432],
  [-1.9953964, -0.31082135, -1.793938, 0.11128172, -0.80583316, 0.39332333],
  [-1.7248666, -0.17075989, -1.5809679, 0.11128172, -0.59286296, 0.39332333],
  [-1.7920194, -0.17075989, -1.5809679, 0.18227178, -0.66385305, 0.32233325],
  [-0.30698407, 0.2513432, -0.3818114, 0.39332333, -0.10168847, 0.18227178],
  [-0.17267853, 0.39332333, -0.2398313, 0.5353035, 0.11128172, 0.18227178],
  [0.09785116, 0.6043749, -0.10168847, 0.746355, 0.11128172, 0.2513432],
  [-1.9953964, -0.31082135, -1.793938, 0.11128172, -0.80583316, 0.39332333],
  [-1.7248666, -0.17075989, -1.5809679, 0.11128172, -0.59286296, 0.39332333],
  [-1.7920194, -0.17075989, -1.5809679, 0.18227178, -0.66385305, 0.32233325],
  [-0.23791264, -0.10168847, -0.17075989, -0.80583316, -0.17075989, 0.04029166],
  [-0.17267853, -0.17075989, -0.10168847, -0.80583316, -0.03069841, 0.11128172],
  [0.2321567, -0.03069841, 0.11128172, -0.59286296, 0.11128172, 0.11128172],
  [-1.9953964, -0.31082135, -1.793938, 0.11128172, -0.80583316, 0.39332333],
  [-1.7248666, -0.17075989, -1.5809679, 0.11128172, -0.59286296, 0.39332333],
  [-1.7920194, -0.17075989, -1.5809679, 0.18227178, -0.66385305, 0.32233325],
  [-0.23791264, -0.10168847, -0.17075989, -0.80583316, -0.17075989, 0.04029166],
  [-0.17267853, -0.17075989, -0.10168847, -0.80583316, -0.03069841, 0.11128172],
  [0.2321567, -0.03069841, 0.11128172, -0.59286296, 0.11128172, 0.11128172],
  [0.36838087, 0.4643134, 0.32233325, -0.03069841, 0.32233325, 0.32233325],
  [0.03069841, 0.39332333, 0.18227178, -0.03069841, 0.04029166, 0.04029166],
  [0.09785116, 0.2513432, 0.18227178, -0.03069841, 0.32233325, 0.18227178],
  [-0.23791264, -0.10168847, -0.17075989, -0.80583316, -0.17075989, 0.04029166],
  [-0.17267853, -0.17075989, -0.10168847, -0.80583316, -0.03069841, 0.11128172],
  [0.2321567, -0.03069841, 0.11128172, -0.59286296, 0.11128172, 0.11128172],
  [0.36838087, 0.4643134, 0.32233325, -0.03069841, 0.32233325, 0.32233325],
  [0.03069841, 0.39332333, 0.18227178, -0.03069841, 0.04029166, 0.04029166],
  [0.09785116, 0.2513432, 0.18227178, -0.03069841, 0.32233325, 0.18227178],
  [-0.6446665, -0.80583316, -0.4528015, -1.5118965, -0.2398313, -0.3818114],
  [0.43553364, 1.0993867, 0.5353035, 1.0283966, 0.2513432, 0.5353035],
  [-0.50844234, -0.2398313, -0.4528015, -0.59286296, -0.2398313, -0.2398313],
  [0.36838087, 0.4643134, 0.32233325, -0.03069841, 0.32233325, 0.32233325],
  [0.03069841, 0.39332333, 0.18227178, -0.03069841, 0.04029166, 0.04029166],
  [0.09785116, 0.2513432, 0.18227178, -0.03069841, 0.32233325, 0.18227178],
  [-0.6446665, -0.80583316, -0.4528015, -1.5118965, -0.2398313, -0.3818114],
  [0.43553364, 1.0993867, 0.5353035, 1.0283966, 0.2513432, 0.5353035],
  [-0.50844234, -0.2398313, -0.4528015, -0.59286296, -0.2398313, -0.2398313],
  [-0.50844234, 0.4643134, -0.03069841, 0.4643134, -0.31082135, 0.18227178],
  [0.09785116, 0.04029166, 0.04029166, -0.03069841, 0.18227178, 0.04029166],
  [0.29930946, 0.11128172, 0.2513432, 0.11128172, 0.32233325, -0.03069841],
  [-0.6446665, -0.80583316, -0.4528015, -1.5118965, -0.2398313, -0.3818114],
  [0.43553364, 1.0993867, 0.5353035, 1.0283966, 0.2513432, 0.5353035],
  [-0.50844234, -0.2398313, -0.4528015, -0.59286296, -0.2398313, -0.2398313],
  [-0.50844234, 0.4643134, -0.03069841, 0.4643134, -0.31082135, 0.18227178],
  [0.09785116, 0.04029166, 0.04029166, -0.03069841, 0.18227178, 0.04029166],
  [0.29930946, 0.11128172, 0.2513432, 0.11128172, 0.32233325, -0.03069841],
  [9.011901, 9.430166, 9.430166, 9.430166, -0.20145829, -0.20145829],
  [-0.5755951, -0.31082135, -0.66385305, -0.3818114, -0.5218729, -0.5218729],
  [-0.44128957, -0.17075989, -0.4528015, -0.10168847, -0.3818114, -0.31082135],
  [-0.50844234, 0.4643134, -0.03069841, 0.4643134, -0.31082135, 0.18227178],
  [0.09785116, 0.04029166, 0.04029166, -0.03069841, 0.18227178, 0.04029166],
  [0.29930946, 0.11128172, 0.2513432, 0.11128172, 0.32233325, -0.03069841],
  [9.011901, 9.430166, 9.430166, 9.430166, -0.20145829, -0.20145829],
  [-0.5755951, -0.31082135, -0.66385305, -0.3818114, -0.5218729, -0.5218729],
  [-0.44128957, -0.17075989, -0.4528015, -0.10168847, -0.3818114, -0.31082135],
  [0.29930946, 0.39332333, 0.18227178, 0.18227178, 0.11128172, 0.6043749],
  [0.2321567, -0.03069841, 0.2513432, 0.11128172, 0.18227178, 0.11128172],
  [0.2321567, 0.18227178, 0.32233325, 0.18227178, 0.11128172, -0.03069841],
  [9.011901, 9.430166, 9.430166, 9.430166, -0.20145829, -0.20145829],
  [-0.5755951, -0.31082135, -0.66385305, -0.3818114, -0.5218729, -0.5218729],
  [-0.44128957, -0.17075989, -0.4528015, -0.10168847, -0.3818114, -0.31082135],
  [0.29930946, 0.39332333, 0.18227178, 0.18227178, 0.11128172, 0.6043749],
  [0.2321567, -0.03069841, 0.2513432, 0.11128172, 0.18227178, 0.11128172],
  [0.2321567, 0.18227178, 0.32233325, 0.18227178, 0.11128172, -0.03069841],
  [0.29930946, 0.04029166, 0.5353035, 0.04029166, 0.746355, 0.04029166],
  [-0.03837301, -0.17075989, 0.18227178, 0.04029166, 0.4643134, -0.10168847],
  [-0.17267853, -0.31082135, 0.18227178, -0.10168847, 0.6043749, -0.10168847],
  [0.29930946, 0.39332333, 0.18227178, 0.18227178, 0.11128172, 0.6043749],
  [0.2321567, -0.03069841, 0.2513432, 0.11128172, 0.18227178, 0.11128172],
  [0.2321567, 0.18227178, 0.32233325, 0.18227178, 0.11128172, -0.03069841],
  [0.29930946, 0.04029166, 0.5353035, 0.04029166, 0.746355, 0.04029166],
  [-0.03837301, -0.17075989, 0.18227178, 0.04029166, 0.4643134, -0.10168847],
  [-0.17267853, -0.31082135, 0.18227178, -0.10168847, 0.6043749, -0.10168847],
  [-0.10552577, -0.31082135, -0.2398313, -0.2398313, -0.17075989, -0.2398313],
  [-0.10552577, -0.2398313, -0.4528015, -0.4528015, -0.2398313, -0.17075989],
  [0.43553364, 0.18227178, -0.10168847, -0.10168847, 0.18227178, 0.04029166],
  [0.29930946, 0.04029166, 0.5353035, 0.04029166, 0.746355, 0.04029166],
  [-0.03837301, -0.17075989, 0.18227178, 0.04029166, 0.4643134, -0.10168847],
  [-0.17267853, -0.31082135, 0.18227178, -0.10168847, 0.6043749, -0.10168847],
  [-0.10552577, -0.31082135, -0.2398313, -0.2398313, -0.17075989, -0.2398313],
  [-0.10552577, -0.2398313, -0.4528015, -0.4528015, -0.2398313, -0.17075989],
  [0.43553364, 0.18227178, -0.10168847, -0.10168847, 0.18227178, 0.04029166],
  [0.09785116, -0.10168847, -0.2398313, 0.04029166, -0.10168847, 0.4643134],
  [0.43553364, -0.03069841, 0.32233325, -0.03069841, -0.03069841, -0.10168847],
  [0.2321567, 0.18227178, 0.6753649, 0.2513432, 0.04029166, -0.17075989],
  [-0.10552577, -0.31082135, -0.2398313, -0.2398313, -0.17075989, -0.2398313],
  [-0.10552577, -0.2398313, -0.4528015, -0.4528015, -0.2398313, -0.17075989],
  [0.43553364, 0.18227178, -0.10168847, -0.10168847, 0.18227178, 0.04029166],
  [0.09785116, -0.10168847, -0.2398313, 0.04029166, -0.10168847, 0.4643134],
  [0.43553364, -0.03069841, 0.32233325, -0.03069841, -0.03069841, -0.10168847],
  [0.2321567, 0.18227178, 0.6753649, 0.2513432, 0.04029166, -0.17075989],
  [-0.7118193, -0.80583316, -0.5218729, -0.80583316, -0.2398313, -0.10168847],
  [-0.10552577, -0.2398313, -0.17075989, -0.17075989, -0.10168847, -0.17075989],
  [-0.30698407, -0.3818114, -0.31082135, -0.03069841, -0.17075989, -0.10168847],
  [0.09785116, -0.10168847, -0.2398313, 0.04029166, -0.10168847, 0.4643134],
  [0.43553364, -0.03069841, 0.32233325, -0.03069841, -0.03069841, -0.10168847],
  [0.2321567, 0.18227178, 0.6753649, 0.2513432, 0.04029166, -0.17075989],
  [-0.7118193, -0.80583316, -0.5218729, -0.80583316, -0.2398313, -0.10168847],
  [-0.10552577, -0.2398313, -0.17075989, -0.17075989, -0.10168847, -0.17075989],
  [-0.30698407, -0.3818114, -0.31082135, -0.03069841, -0.17075989, -0.10168847],
  [0.6369919, 2.3004618, 1.87644, 1.9474301, -0.10168847, 1.4524183],
  [0.84036887, 2.4405231, 1.80545, 1.9474301, 0.4643134, 1.9474301],
  [1.0437458, 2.6534934, 1.3814282, 2.1584816, 0.4643134, 2.0165014],
  [-0.7118193, -0.80583316, -0.5218729, -0.80583316, -0.2398313, -0.10168847],
  [-0.10552577, -0.2398313, -0.17075989, -0.17075989, -0.10168847, -0.17075989],
  [-0.30698407, -0.3818114, -0.31082135, -0.03069841, -0.17075989, -0.10168847],
  [0.6369919, 2.3004618, 1.87644, 1.9474301, -0.10168847, 1.4524183],
  [0.84036887, 2.4405231, 1.80545, 1.9474301, 0.4643134, 1.9474301],
  [1.0437458, 2.6534934, 1.3814282, 2.1584816, 0.4643134, 2.0165014],
  [0.16500393, -0.10168847, 0.18227178, -0.2398313, 0.2513432, -0.17075989],
  [0.5026864, 0.18227178, 0.4643134, 0.04029166, 0.6753649, -0.17075989],
  [0.77321607, 0.5353035, 0.6753649, 0.32233325, 0.746355, -0.10168847],
  [0.6369919, 2.3004618, 1.87644, 1.9474301, -0.10168847, 1.4524183],
  [0.84036887, 2.4405231, 1.80545, 1.9474301, 0.4643134, 1.9474301],
  [1.0437458, 2.6534934, 1.3814282, 2.1584816, 0.4643134, 2.0165014],
  [0.16500393, -0.10168847, 0.18227178, -0.2398313, 0.2513432, -0.17075989],
  [0.5026864, 0.18227178, 0.4643134, 0.04029166, 0.6753649, -0.17075989],
  [0.77321607, 0.5353035, 0.6753649, 0.32233325, 0.746355, -0.10168847],
  [0.2321567, 0.04029166, 0.04029166, -0.03069841, -0.10168847, 0.2513432],
  [-0.03837301, -0.10168847, -0.10168847, 0.04029166, -0.10168847, 0.2513432],
  [-0.10552577, -0.17075989, -0.17075989, -0.10168847, 0.04029166, 0.18227178],
  [0.16500393, -0.10168847, 0.18227178, -0.2398313, 0.2513432, -0.17075989],
  [0.5026864, 0.18227178, 0.4643134, 0.04029166, 0.6753649, -0.17075989],
  [0.77321607, 0.5353035, 0.6753649, 0.32233325, 0.746355, -0.10168847],
  [0.2321567, 0.04029166, 0.04029166, -0.03069841, -0.10168847, 0.2513432],
  [-0.03837301, -0.10168847, -0.10168847, 0.04029166, -0.10168847, 0.2513432],
  [-0.10552577, -0.17075989, -0.17075989, -0.10168847, 0.04029166, 0.18227178],
  [-0.50844234, -0.03069841, -0.2398313, -0.3818114, -0.17075989, 0.04029166],
  [-0.50844234, -0.31082135, -0.31082135, -0.3818114, -0.10168847, 0.04029166],
  [-0.17267853, 0.04029166, -0.31082135, -0.2398313, -0.10168847, 0.11128172],
  [0.2321567, 0.04029166, 0.04029166, -0.03069841, -0.10168847, 0.2513432],
  [-0.03837301, -0.10168847, -0.10168847, 0.04029166, -0.10168847, 0.2513432],
  [-0.10552577, -0.17075989, -0.17075989, -0.10168847, 0.04029166, 0.18227178],
  [-0.50844234, -0.03069841, -0.2398313, -0.3818114, -0.17075989, 0.04029166],
  [-0.50844234, -0.31082135, -0.31082135, -0.3818114, -0.10168847, 0.04029166],
  [-0.17267853, 0.04029166, -0.31082135, -0.2398313, -0.10168847, 0.11128172],
  [-0.23791264, 0.11128172, -0.10168847, -0.03069841, -0.17075989, 0.18227178],
  [-0.23791264, -0.03069841, -0.3818114, -0.03069841, -0.3818114, 0.11128172],
  [-0.03837301, -0.17075989, -0.4528015, -0.2398313, -0.2398313, 0.11128172],
  [-0.50844234, -0.03069841, -0.2398313, -0.3818114, -0.17075989, 0.04029166],
  [-0.50844234, -0.31082135, -0.31082135, -0.3818114, -0.10168847, 0.04029166],
  [-0.17267853, 0.04029166, -0.31082135, -0.2398313, -0.10168847, 0.11128172],
  [-0.23791264, 0.11128172, -0.10168847, -0.03069841, -0.17075989, 0.18227178],
  [-0.23791264, -0.03069841, -0.3818114, -0.03069841, -0.3818114, 0.11128172],
  [-0.03837301, -0.17075989, -0.4528015, -0.2398313, -0.2398313, 0.11128172],
  [0.09785116, -0.03069841, 0.04029166, -0.17075989, 0.4643134, 0.32233325],
  [-0.17267853, 0.11128172, -0.17075989, 0.2513432, -0.17075989, 0.32233325],
  [0.03069841, 0.18227178, 0.11128172, 0.18227178, 0.2513432, 0.5353035],
  [-0.23791264, 0.11128172, -0.10168847, -0.03069841, -0.17075989, 0.18227178],
  [-0.23791264, -0.03069841, -0.3818114, -0.03069841, -0.3818114, 0.11128172],
  [-0.03837301, -0.17075989, -0.4528015, -0.2398313, -0.2398313, 0.11128172],
  [0.09785116, -0.03069841, 0.04029166, -0.17075989, 0.4643134, 0.32233325],
  [-0.17267853, 0.11128172, -0.17075989, 0.2513432, -0.17075989, 0.32233325],
  [0.03069841, 0.18227178, 0.11128172, 0.18227178, 0.2513432, 0.5353035],
  [-0.17267853, -0.31082135, -0.31082135, -0.5218729, -0.4528015, -0.2398313],
  [-0.03837301, -0.17075989, -0.03069841, -0.17075989, 0.04029166, -0.03069841],
  [-0.10552577, -0.3818114, -0.2398313, -0.3818114, 0.04029166, -0.17075989],
  [0.09785116, -0.03069841, 0.04029166, -0.17075989, 0.4643134, 0.32233325],
  [-0.17267853, 0.11128172, -0.17075989, 0.2513432, -0.17075989, 0.32233325],
  [0.03069841, 0.18227178, 0.11128172, 0.18227178, 0.2513432, 0.5353035],
  [-0.17267853, -0.31082135, -0.31082135, -0.5218729, -0.4528015, -0.2398313],
  [-0.03837301, -0.17075989, -0.03069841, -0.17075989, 0.04029166, -0.03069841],
  [-0.10552577, -0.3818114, -0.2398313, -0.3818114, 0.04029166, -0.17075989],
  [0.16500393, -0.9458946, 0.2513432, -1.0168847, -3.1350746, -0.8749046],
  [-0.30698407, -0.8749046, -0.17075989, -0.80583316, -0.17075989, -0.59286296],
  [-0.30698407, -0.80583316, -0.17075989, -0.5218729, -0.03069841, -0.4528015],
  [-0.17267853, -0.31082135, -0.31082135, -0.5218729, -0.4528015, -0.2398313],
  [-0.03837301, -0.17075989, -0.03069841, -0.17075989, 0.04029166, -0.03069841],
  [-0.10552577, -0.3818114, -0.2398313, -0.3818114, 0.04029166, -0.17075989],
  [0.16500393, -0.9458946, 0.2513432, -1.0168847, -3.1350746, -0.8749046],
  [-0.30698407, -0.8749046, -0.17075989, -0.80583316, -0.17075989, -0.59286296],
  [-0.30698407, -0.80583316, -0.17075989, -0.5218729, -0.03069841, -0.4528015],
  [-0.30698407, -0.2398313, -0.5218729, -0.17075989, -0.5218729, 0.39332333],
  [0.5026864, 1.2413667, 0.6753649, 1.0283966, 0.4643134, 0.04029166],
  [-0.50844234, -0.03069841, 0.04029166, -0.10168847, -0.10168847, -0.17075989],
  [0.16500393, -0.9458946, 0.2513432, -1.0168847, -3.1350746, -0.8749046],
  [-0.30698407, -0.8749046, -0.17075989, -0.80583316, -0.17075989, -0.59286296],
  [-0.30698407, -0.80583316, -0.17075989, -0.5218729, -0.03069841, -0.4528015],
  [-0.30698407, -0.2398313, -0.5218729, -0.17075989, -0.5218729, 0.39332333],
  [0.5026864, 1.2413667, 0.6753649, 1.0283966, 0.4643134, 0.04029166],
  [-0.50844234, -0.03069841, 0.04029166, -0.10168847, -0.10168847, -0.17075989],
  [0.16500393, 0.6043749, 0.6753649, 0.39332333, 0.18227178, 0.6753649],
  [0.5026864, 0.11128172, 0.5353035, -0.2398313, 0.39332333, 0.18227178],
  [0.6369919, 0.6043749, 0.8883351, 0.4643134, 0.5353035, 0.746355],
  [-0.30698407, -0.2398313, -0.5218729, -0.17075989, -0.5218729, 0.39332333],
  [0.5026864, 1.2413667, 0.6753649, 1.0283966, 0.4643134, 0.04029166],
  [-0.50844234, -0.03069841, 0.04029166, -0.10168847, -0.10168847, -0.17075989],
  [0.16500393, 0.6043749, 0.6753649, 0.39332333, 0.18227178, 0.6753649],
  [0.5026864, 0.11128172, 0.5353035, -0.2398313, 0.39332333, 0.18227178],
  [0.6369919, 0.6043749, 0.8883351, 0.4643134, 0.5353035, 0.746355],
  [0.29930946, 0.04029166, 0.18227178, 0.2513432, 0.5353035, 0.4643134],
  [0.77321607, -0.3818114, 0.817345, -0.59286296, 0.32233325, -0.4528015],
  [0.29930946, -0.66385305, 0.4643134, -0.7348431, -0.10168847, -1.1588649],
  [0.16500393, 0.6043749, 0.6753649, 0.39332333, 0.18227178, 0.6753649],
  [0.5026864, 0.11128172, 0.5353035, -0.2398313, 0.39332333, 0.18227178],
  [0.6369919, 0.6043749, 0.8883351, 0.4643134, 0.5353035, 0.746355],
  [0.29930946, 0.04029166, 0.18227178, 0.2513432, 0.5353035, 0.4643134],
  [0.77321607, -0.3818114, 0.817345, -0.59286296, 0.32233325, -0.4528015],
  [0.29930946, -0.66385305, 0.4643134, -0.7348431, -0.10168847, -1.1588649],
  [-0.23791264, -0.10168847, -0.17075989, 0.2513432, -0.10168847, 0.39332333],
  [0.16500393, 0.18227178, 0.18227178, 0.5353035, 0.04029166, 0.32233325],
  [0.6369919, 0.2513432, 0.4643134, -0.3818114, 0.32233325, -0.03069841],
  [0.29930946, 0.04029166, 0.18227178, 0.2513432, 0.5353035, 0.4643134],
  [0.77321607, -0.3818114, 0.817345, -0.59286296, 0.32233325, -0.4528015],
  [0.29930946, -0.66385305, 0.4643134, -0.7348431, -0.10168847, -1.1588649],
  [-0.23791264, -0.10168847, -0.17075989, 0.2513432, -0.10168847, 0.39332333],
  [0.16500393, 0.18227178, 0.18227178, 0.5353035, 0.04029166, 0.32233325],
  [0.6369919, 0.2513432, 0.4643134, -0.3818114, 0.32233325, -0.03069841],
  [0.29930946, 0.11128172, 0.11128172, -0.03069841, -0.4528015, 0.04029166],
  [0.2321567, 0.11128172, 0.11128172, 0.04029166, -0.5218729, 0.18227178],
  [-0.03837301, -0.10168847, -0.10168847, -0.17075989, -0.66385305, 0.18227178],
  [-0.23791264, -0.10168847, -0.17075989, 0.2513432, -0.10168847, 0.39332333],
  [0.16500393, 0.18227178, 0.18227178, 0.5353035, 0.04029166, 0.32233325],
  [0.6369919, 0.2513432, 0.4643134, -0.3818114, 0.32233325, -0.03069841],
  [0.29930946, 0.11128172, 0.11128172, -0.03069841, -0.4528015, 0.04029166],
  [0.2321567, 0.11128172, 0.11128172, 0.04029166, -0.5218729, 0.18227178],
  [-0.03837301, -0.10168847, -0.10168847, -0.17075989, -0.66385305, 0.18227178],
  [0.29930946, 0.32233325, -0.03069841, 0.18227178, -0.03069841, 0.746355],
  [-0.10552577, 0.18227178, -0.17075989, 0.32233325, -0.03069841, 0.4643134],
  [0.16500393, 0.5353035, 0.18227178, 0.6753649, 0.2513432, 0.6753649],
  [0.29930946, 0.11128172, 0.11128172, -0.03069841, -0.4528015, 0.04029166],
  [0.2321567, 0.11128172, 0.11128172, 0.04029166, -0.5218729, 0.18227178],
  [-0.03837301, -0.10168847, -0.10168847, -0.17075989, -0.66385305, 0.18227178],
  [0.29930946, 0.32233325, -0.03069841, 0.18227178, -0.03069841, 0.746355],
  [-0.10552577, 0.18227178, -0.17075989, 0.32233325, -0.03069841, 0.4643134],
  [0.16500393, 0.5353035, 0.18227178, 0.6753649, 0.2513432, 0.6753649],
  [-0.44128957, -0.3818114, -0.10168847, -0.5218729, 0.04029166, 0.11128172],
  [0.36838087, -0.3818114, 0.39332333, 0.11128172, 0.4643134, 0.39332333],
  [-0.3741368, -0.2398313, -0.31082135, -0.31082135, -0.4528015, -0.31082135],
  [0.29930946, 0.32233325, -0.03069841, 0.18227178, -0.03069841, 0.746355],
  [-0.10552577, 0.18227178, -0.17075989, 0.32233325, -0.03069841, 0.4643134],
  [0.16500393, 0.5353035, 0.18227178, 0.6753649, 0.2513432, 0.6753649],
  [-0.44128957, -0.3818114, -0.10168847, -0.5218729, 0.04029166, 0.11128172],
  [0.36838087, -0.3818114, 0.39332333, 0.11128172, 0.4643134, 0.39332333],
  [-0.3741368, -0.2398313, -0.31082135, -0.31082135, -0.4528015, -0.31082135],
  [-0.50844234, 0.04029166, -0.4528015, 0.32233325, -0.31082135, 0.11128172],
  [-0.778972, -0.2398313, -0.80583316, 0.04029166, -0.4528015, 0.04029166],
  [-0.982349, -0.31082135, -0.9458946, 0.11128172, -0.4528015, 0.04029166],
  [-0.44128957, -0.3818114, -0.10168847, -0.5218729, 0.04029166, 0.11128172],
  [0.36838087, -0.3818114, 0.39332333, 0.11128172, 0.4643134, 0.39332333],
  [-0.3741368, -0.2398313, -0.31082135, -0.31082135, -0.4528015, -0.31082135],
  [-0.50844234, 0.04029166, -0.4528015, 0.32233325, -0.31082135, 0.11128172],
  [-0.778972, -0.2398313, -0.80583316, 0.04029166, -0.4528015, 0.04029166],
  [-0.982349, -0.31082135, -0.9458946, 0.11128172, -0.4528015, 0.04029166],
];

var delays = [250];

void main() {
  runApp(MyApp());

  int addAmount = 10000;
  for (int i = 2; i < 1 + addAmount; i++) delays.add(delays[0] * i);
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final appTitle = 'Neural Radar EEG Trainer';
    return MaterialApp(
      title: appTitle,
      home: MyHomePage(title: appTitle),
    );
  }
}

// The StatefulWidget's job is to take data and create a State class.
// In this case, the widget takes a title, and creates a _MyHomePageState.
class MyHomePage extends StatefulWidget {
  final String title;

  MyHomePage({Key key, this.title}) : super(key: key);

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

var curr_est = 0;

// The State class is responsible for two things: holding some data you can
// update and building the UI using that data.
class _MyHomePageState extends State<MyHomePage> {
  // Whether the green box should be visible
  bool _visible = true;

  void start_session(BuildContext context) {
    setState(() {
      selected = true;
    });

    Future.delayed(Duration(milliseconds: 750), () {
      setState(() {
        _visible = false;
      });
    });

    _delayedIncrementCounter();
  }

  void _delayedIncrementCounter() {
    Future.delayed(Duration(milliseconds: 1000), () {
      for (int i = 0; i < delays.length; i++) {
        Future.delayed(Duration(milliseconds: delays[i]), () {
          setState(() {
            my_main_str = curr_est.toString();
            curr_est = (curr_est + 1) % 28;
          });
        });
      }
      // sleep(Duration(milliseconds: delays[delays.length - 1]));
    });
  }

  bool selected = false;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(),
      body: Column(
        children: [
          GestureDetector(
            onTap: () {
              selected = false;
              _visible = true;
            }, // handle your image tap here
            child: Image.asset(
              'assets/logo.png',
            ),
          ),
          AnimatedContainer(
            width: selected ? 800.0 : 0.1,
            height: selected ? 400.0 : 0.1,
            color: selected ? Colors.blue : Colors.white,
            alignment:
                selected ? Alignment.center : AlignmentDirectional.bottomEnd,
            duration: Duration(seconds: 1),
            curve: Curves.fastOutSlowIn,
            child: AnimatedOpacity(
              opacity: _visible ? 0.0 : 1.0,
              duration: Duration(microseconds: 750),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  Text("\nFocus Score:",
                      style: TextStyle(
                        fontSize: 15,
                        color: Colors.black,
                      )),
                  Text(handle_it(),
                      style: TextStyle(
                        fontSize: 40,
                        color: Colors.grey[300],
                      )),
                  Text("\n\n"),
                  Image.asset(
                    'assets/jetpack0.png',
                    height:100,
                    width:100,

                  ),
                  Text("\n\n"),
                  Text("Raw Electrode Voltages:",
                      style: TextStyle(
                        fontSize: 20,
                        color: Colors.grey[200],
                      )),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Text(read_input(0),
                          style: TextStyle(
                            fontSize: 20,
                            color: Colors.grey[200],
                          )),
                      Text(suffix),
                      Text(sep),
                      Text(read_input(1),
                          style: TextStyle(
                            fontSize: 20,
                            color: Colors.grey[200],
                          )),
                      Text(suffix),
                      Text(sep),
                      Text(read_input(2),
                          style: TextStyle(
                            fontSize: 15,
                            color: Colors.grey[200],
                          )),
                      Text(suffix,
                          style: TextStyle(
                            fontSize: 12,
                            color: Colors.grey[150],
                          )),
                      Text(sep),
                      Text(read_input(3),
                          style: TextStyle(
                            fontSize: 15,
                            color: Colors.grey[200],
                          )),
                      Text(suffix),
                      Text(sep),
                      Text(read_input(4),
                          style: TextStyle(
                            fontSize: 15,
                            color: Colors.grey[200],
                          )),
                      Text(suffix),
                      Text(sep),
                      Text(read_input(5),
                          style: TextStyle(
                            fontSize: 15,
                            color: Colors.grey[200],
                          )),
                      Text(suffix),
                      Text(sep),
                    ],
                  ),
                ],
              ),
            ),
          ),
          AnimatedOpacity(
            opacity: _visible ? 1.0 : 0.0,
            duration: Duration(microseconds: 2000),
            child: Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  Text(''),
                  Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: ElevatedButton(
                      child: Text("Begin Session"),
                      onPressed: () {
                        start_session(context);
                        // Navigator.of(context).push(_createRoute(1));
                      },
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: ElevatedButton(
                      child: Text('History'),
                      onPressed: () {
                        Navigator.of(context).push(_createRoute(0));
                      },
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: ElevatedButton(
                      child: Text('Settings'),
                      onPressed: () {
                        Navigator.of(context).push(_createRoute(2));
                      },
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: ElevatedButton(
                      child: Text('Help'),
                      onPressed: () {
                        Navigator.of(context).push(_createRoute(2));
                      },
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: ElevatedButton(
                      child: Text('Exit'),
                      onPressed: () {
                        Navigator.of(context).push(_createRoute(2));
                      },
                    ),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}

// void main() {
//   my_main_str = "Begin Session";
//   runApp(MyApp());
// }
//
// class MyHomePage extends StatefulWidget {
//   final String title;
//
//   MyHomePage({Key key, this.title}) : super(key: key);
//
//   @override
//   _MyHomePageState createState() => _MyHomePageState();
// }
//
// class _MyHomePageState extends State<MyHomePage> {
//   // Whether the green box should be visible.
//   bool _visible = true;
//
//   @override
//   Widget build(BuildContext context) {
//     // The green box goes here with some other Widgets.
//   }
// }
// class MyApp extends StatelessWidget {
//   @override
//   Widget build(BuildContext context) {
//     final appTitle = 'Opacity Demo';
//     return MaterialApp(
//       title: appTitle,
//       home: MyHomePage(title: appTitle),
//     );
//   }
// }

// class MyApp extends StatelessWidget {
//   // This widget is the root of your application.
//   @override
//   Widget build(BuildContext context) {
//     return MaterialApp(
//       title: 'Neural Radar',
//       theme: ThemeData(
//         primarySwatch: Colors.blueGrey,
//       ),
//       home: Page1(),
//
//       // home: MyHomePage(title: 'Neural Radar'),
//     );
//   }
// }

// class MyHomePage extends StatefulWidget {
//   MyHomePage({Key key, this.title}) : super(key: key);
//
//
//   final String title;
//
//   // @override
//   // _MyHomePageState createState() => _MyHomePageState();
// }

class Page1 extends StatelessWidget {
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Image.asset(
              'assets/logo.png',
            ),
            Text(''),
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: ElevatedButton(
                child: Text(my_main_str),
                onPressed: () {
                  Navigator.of(context).push(_createRoute(1));
                },
              ),
            ),
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: ElevatedButton(
                child: Text('History'),
                onPressed: () {
                  Navigator.of(context).push(_createRoute(0));
                },
              ),
            ),
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: ElevatedButton(
                child: Text('Settings'),
                onPressed: () {
                  Navigator.of(context).push(_createRoute(2));
                },
              ),
            ),
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: ElevatedButton(
                child: Text('Help'),
                onPressed: () {
                  Navigator.of(context).push(_createRoute(2));
                },
              ),
            ),
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: ElevatedButton(
                child: Text('Exit'),
                onPressed: () {
                  Navigator.of(context).push(_createRoute(2));
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}

Route _createRoute(var int) {
  if (int == 0) {
    return PageRouteBuilder(
      pageBuilder: (context, animation, secondaryAnimation) => HistoryPage(),
      transitionsBuilder: (context, animation, secondaryAnimation, child) {
        var begin = Offset(0.0, 1);
        var end = Offset.zero;
        var curve = Curves.easeInOutQuart;

        var tween =
            Tween(begin: begin, end: end).chain(CurveTween(curve: curve));

        return SlideTransition(
          position: animation.drive(tween),
          child: child,
        );
      },
    );
  }

  if (int == 2) {
    return PageRouteBuilder(
      pageBuilder: (context, animation, secondaryAnimation) => SettingsPage(),
      transitionsBuilder: (context, animation, secondaryAnimation, child) {
        var begin = Offset(0.0, 1);
        var end = Offset.zero;
        var curve = Curves.easeInOutQuart;

        var tween =
            Tween(begin: begin, end: end).chain(CurveTween(curve: curve));

        return SlideTransition(
          position: animation.drive(tween),
          child: child,
        );
      },
    );
  }

  if (int == 3) {
    return PageRouteBuilder(
      pageBuilder: (context, animation, secondaryAnimation) => HelpPage(),
      transitionsBuilder: (context, animation, secondaryAnimation, child) {
        var begin = Offset(0.0, 1);
        var end = Offset.zero;
        var curve = Curves.easeInOutQuart;

        var tween =
            Tween(begin: begin, end: end).chain(CurveTween(curve: curve));

        return SlideTransition(
          position: animation.drive(tween),
          child: child,
        );
      },
    );
  }
}

var smooth_value = 100;
var smooth_value_two = 100;
var last_ratio = 1.0;
var rng = new Random();
var imgscale = 1.0;
String handle_it() {
  // var return_ratio = ((last_ratio) * smooth_value_two + ratios[curr_est]) /
  //     (smooth_value_two - 1);
  // var return_ratio = (last_ratio * smooth_value + ratios[curr_est]) / (smooth_value - 1);
  // last_ratio=return_ratio;

  // return_ratio*=1000000;
  // return_ratio%=100;
  if (rng.nextInt(1) > 0 || last_ratio < 10)
  last_ratio += rng.nextDouble();
  else
    last_ratio -= rng.nextDouble();

  imgscale = last_ratio%11;
  return last_ratio.toStringAsFixed(0);
}

var curr_vals = [
  -0.10552577,
  -2.5709915,
  0.04029166,
  -2.2870312,
  0.18227178,
  -2.0049896
];

String read_input(var index) {
  var curr_read = inputs[curr_est].toString();

  var read_values =
      curr_read.split(" ")[index].replaceFirst("[", "").replaceFirst("]", "");

  read_values = read_values.replaceFirst(",", "");
  var parsed = double.parse(read_values);
  parsed = parsed.abs();
  parsed = (curr_vals[index] * smooth_value + parsed) / (smooth_value - 1);

  read_values = parsed.toStringAsFixed(2);
  return read_values;
}

var focus_score = "0";
var sep = "\t";
var suffix = " mV";

class HistoryPage extends StatelessWidget {
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(),
      body: Center(
        child: Text('History'),
      ),
    );
  }
}

class SettingsPage extends StatelessWidget {
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(),
      body: Center(
        child: Text('Settings'),
      ),
    );
  }
}

class HelpPage extends StatelessWidget {
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(),
      body: Center(
        child: Text('Help'),
      ),
    );
  }
}
